<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="md_pages_components_rom_galerkin_masked" kind="page">
    <compoundname>md_pages_components_rom_galerkin_masked</compoundname>
    <title>rom: Galerkin: masked problem</title>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para> <mcss:class xmlns:mcss="http://mcss.mosra.cz/doxygen/" mcss:class="m-note m-default" /></para>
<para><parblock><para>Defined in module: <computeroutput>pressio4py.rom.galerkin</computeroutput></para>
<para>Import as: <emsp/> <emsp/> <emsp/> <computeroutput>from pressio4py.rom import galerkin</computeroutput> </para>
</parblock></para>
<sect1 id="md_pages_components_rom_galerkin_masked_1autotoc_md73">
<title>API, Parameters and Requirements</title>
<para><programlisting filename=".py"><codeline><highlight class="normal">problem<sp/>=<sp/>galerkin.MaskedExplicitProblem(scheme,<sp/>fom_adapter,<sp/>decoder,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rom_state,<sp/>fom_ref_state,<sp/>\<sp/><sp/><sp/><sp/><sp/><sp/>(1)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>projector,<sp/>masker)</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">problem<sp/>=<sp/>galerkin.MaskedImplicitProblem(scheme,<sp/>fom_adapter,<sp/>decoder,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rom_state,<sp/>fom_ref_state,<sp/>\<sp/><sp/><sp/><sp/><sp/><sp/>(2)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>projector,<sp/>masker)</highlight></codeline>
</programlisting></para>
<para><itemizedlist>
<listitem><para><computeroutput>scheme</computeroutput>:<itemizedlist>
<listitem><para>value from the <computeroutput>ode.stepscheme</computeroutput> enum setting the desired stepping scheme</para>
</listitem><listitem><para>(1) requires <ulink url="md_pages_components_ode_steppers_explicit.html">explicit value</ulink></para>
</listitem><listitem><para>(2) requires <ulink url="md_pages_components_ode_steppers_implicit.html">implicit value</ulink></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><computeroutput>fom_adapter</computeroutput>:<itemizedlist>
<listitem><para>instance of your adapter class specifying the FOM problem. <linebreak/>
</para>
</listitem><listitem><para>must satisfy one of the APIs suitable for Galerkin, see <ulink url="./md_pages_components_rom_fom_apis.html">API list</ulink></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><computeroutput>decoder</computeroutput>:<itemizedlist>
<listitem><para>decoder object</para>
</listitem><listitem><para>must satify the requirements listed <ulink url="md_pages_components_rom_decoder.html">here</ulink></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><computeroutput>rom_state</computeroutput>:<itemizedlist>
<listitem><para>currently, must be a rank-1 <computeroutput>numpy.array</computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><computeroutput>fom_ref_state</computeroutput>:<itemizedlist>
<listitem><para>your FOM reference state that is used when reconstructing the FOM state</para>
</listitem><listitem><para>must be a rank-1 <computeroutput>numpy.array</computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><computeroutput>projector</computeroutput>:<itemizedlist>
<listitem><para>performs the projection of the FOM operators onto the reduced space</para>
</listitem><listitem><para>must meet <ulink url="md_pages_components_rom_galerkin_projector.html">this specific API</ulink></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><computeroutput>masker</computeroutput>:<itemizedlist>
<listitem><para>an functor responsible of &quot;masking&quot; the FOM operators</para>
</listitem><listitem><para>must be a functor with a specific API, see details below</para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
<sect2 id="md_pages_components_rom_galerkin_masked_1autotoc_md74">
<title>Masker</title>
<para> <mcss:span xmlns:mcss="http://mcss.mosra.cz/doxygen/" mcss:class="m-text m-danger">todo</mcss:span>: explain what it is</para>
<para>The masker must meet the following API:</para>
<para><programlisting filename=".py"><codeline><highlight class="keyword">class<sp/></highlight><highlight class="normal">Masker:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__init__(self,<sp/>sample_indices):</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>self.sample_indices<sp/>=<sp/>sample_indices</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>self.N<sp/>=<sp/>len(self.sample_indices)</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">createApplyMaskResult(self,<sp/>operand):</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(operand.ndim<sp/>==<sp/>1):</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>np.zeros(N)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>np.zeros((N,<sp/>,<sp/>operand.shape[1]))</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__call__(self,<sp/>operand,<sp/>time,<sp/>result):</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>time<sp/>is<sp/>not<sp/>used,<sp/>but<sp/>you<sp/>can<sp/>potentially</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>result[:]<sp/>=<sp/>np.take(operand,<sp/>self.sample_indices)</highlight></codeline>
</programlisting></para>
<para>where <computeroutput>sample_indices</computeroutput> is a <computeroutput>numpy.array</computeroutput> holding the set of the row indices to sample.</para>
</sect2>
</sect1>
<sect1 id="md_pages_components_rom_galerkin_masked_1autotoc_md75">
<title>Example usage</title>
<para> <mcss:span xmlns:mcss="http://mcss.mosra.cz/doxygen/" mcss:class="m-text m-danger">todo</mcss:span> link tutorials </para>
</sect1>
    </detaileddescription>
    <location file="pages/components/rom_galerkin_masked.md"/>
  </compounddef>
</doxygen>
