<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="md_pages_components_rom_galerkin_default" kind="page">
    <compoundname>md_pages_components_rom_galerkin_default</compoundname>
    <title>rom: Galerkin: default problem</title>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para> <mcss:class xmlns:mcss="http://mcss.mosra.cz/doxygen/" mcss:class="m-note m-default" /></para>
<para><parblock><para>Defined in module: <computeroutput>pressio4py.rom.galerkin</computeroutput></para>
<para>Import as: <emsp/> <emsp/> <emsp/> <computeroutput>from pressio4py.rom import galerkin</computeroutput> </para>
</parblock></para>
<sect1 id="md_pages_components_rom_galerkin_default_1autotoc_md67">
<title>API, Parameters and Requirements</title>
<para><programlisting filename=".py"><codeline><highlight class="normal">problem<sp/>=<sp/>galerkin.DefaultExplicitProblem(scheme,<sp/>fom_adapter,<sp/>decoder,<sp/>\<sp/><sp/><sp/>(1)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rom_state,<sp/>fom_ref_state)</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">problem<sp/>=<sp/>galerkin.DefaultImplicitProblem(scheme,<sp/>fom_adapter,<sp/>decoder,<sp/>\<sp/><sp/><sp/>(2)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rom_state,<sp/>fom_ref_state)</highlight></codeline>
</programlisting></para>
<para><itemizedlist>
<listitem><para><computeroutput>scheme</computeroutput>:<itemizedlist>
<listitem><para>value from the <computeroutput>ode.stepscheme</computeroutput> enum setting the desired stepping scheme</para>
</listitem><listitem><para>(1) requires <ulink url="md_pages_components_ode_steppers_explicit.html">explicit value</ulink></para>
</listitem><listitem><para>(2) requires <ulink url="md_pages_components_ode_steppers_implicit.html">implicit value</ulink></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><computeroutput>fom_adapter</computeroutput>:<itemizedlist>
<listitem><para>instance of your adapter class specifying the FOM problem. <linebreak/>
</para>
</listitem><listitem><para>must satisfy one of the APIs suitable for Galerkin, see <ulink url="./md_pages_components_rom_fom_apis.html">API list</ulink></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><computeroutput>decoder</computeroutput>:<itemizedlist>
<listitem><para>decoder object</para>
</listitem><listitem><para>must satify the requirements listed <ulink url="md_pages_components_rom_decoder.html">here</ulink></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><computeroutput>rom_state</computeroutput>:<itemizedlist>
<listitem><para>currently, must be a rank-1 <computeroutput>numpy.array</computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><computeroutput>fom_ref_state</computeroutput>:<itemizedlist>
<listitem><para>your FOM reference state that is used when reconstructing the FOM state</para>
</listitem><listitem><para>must be a rank-1 <computeroutput>numpy.array</computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
<para><linebreak/>
</para>
</sect1>
<sect1 id="md_pages_components_rom_galerkin_default_1autotoc_md68">
<title>Example usage</title>
<sect2 id="md_pages_components_rom_galerkin_default_1autotoc_md69">
<title>Explicit Case</title>
<para>An example usage for explicit stepper is as follows:</para>
<para><programlisting filename=".py"><codeline><highlight class="comment">#<sp/>assuming:<sp/>decoder,<sp/>adapter,<sp/>rom_state,<sp/>fom_ref_state<sp/>are<sp/>defined</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">scheme<sp/>=<sp/>ode.stepscheme.ForwardEuler</highlight></codeline>
<codeline><highlight class="normal">problem<sp/>=<sp/>rom.galerkin.DefaultExplicitProblem(scheme,<sp/>adapter,<sp/>decoder,<sp/>rom_state,<sp/>fom_ref_state)</highlight></codeline>
<codeline><highlight class="normal">dt<sp/>=<sp/>1.</highlight></codeline>
<codeline><highlight class="normal">num_steps<sp/>=<sp/>2</highlight></codeline>
<codeline><highlight class="normal">observer<sp/>=<sp/>MyObserver()</highlight></codeline>
<codeline><highlight class="normal">ode.advance_n_steps_and_observe(problem,<sp/>rom_state,<sp/>0.,<sp/>dt,<sp/>num_steps,<sp/>observer)</highlight></codeline>
</programlisting></para>
</sect2>
<sect2 id="md_pages_components_rom_galerkin_default_1autotoc_md70">
<title>Implicit Case</title>
<para>An example usage for implicit stepper is as follows:</para>
<para><programlisting filename=".py"><codeline><highlight class="normal">scheme<sp/>=<sp/>ode.stepscheme.BDF1</highlight></codeline>
<codeline><highlight class="normal">problem<sp/>=<sp/>rom.galerkin.DefaultImplicitProblem(scheme,<sp/>adapter,<sp/>decoder,<sp/>rom_state,<sp/>fom_ref_state)</highlight></codeline>
<codeline><highlight class="normal">//<sp/>todo<sp/>add</highlight></codeline>
</programlisting> </para>
</sect2>
</sect1>
    </detaileddescription>
    <location file="pages/components/rom_galerkin_default.md"/>
  </compounddef>
</doxygen>
