# This is a basic workflow to help you get started with Actions

name: Test compilation

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: install compilers
        run: |
          sudo apt install gcc-10 g++-10
          export CC=/usr/bin/gcc-10
          export CXX=/usr/bin/g++-10
          echo "Compilers:"
          echo $CXX
          echo $CC
      - name: Setup directories
        run: |
          mkdir ~/pressio_repos
          mkdir ~/pressio_builds 

      - name: Clone Repos 
        run: |
          cd ~/pressio_repos
          git clone https://github.com/Pressio/pressio.git
          git clone https://github.com/Pressio/pressio-builder.git
          git clone https://github.com/Pressio/pressio4py.git
          pwd
          ls -lh
      - name: TPLs
        run: |
          cd ~/pressio_repos
          cd pressio-builder
          chmod +x main_tpls.sh
          export TERM=xterm-256color
          export CC=/usr/bin/gcc-10
          export CXX=/usr/bin/g++-10
          echo $TERM
          bash ./main_tpls.sh -dryrun=no -build-mode=Debug -target-dir=${HOME}/pressio_builds -tpls=pybind11,eigen
          cd ~/pressio_builds
          pwd
          ls -lh ${HOME}/pressio_builds/pybind11
      - name: Install pressio
        run: |
          export TERM=xterm-256color
          cd ~/pressio_repos/pressio-builder
          export CC=/usr/bin/gcc-10
          export CXX=/usr/bin/g++-10
          chmod + main_pressio.sh
          ./main_pressio.sh -dryrun=no \
            -pressio-src=${HOME}/pressio_repos/pressio \
            -target-dir=${HOME}/pressio_builds \
            -cmake-generator-name=default_pybind \
            -eigen-path=${HOME}/pressio_builds/eigen/install \
            -pybind11-path=${HOME}/pressio_builds/pybind11/install
      - name: Build pressio4py
        run: |
          export TERM=xterm-256color
          export CC=/usr/bin/gcc-10
          export CXX=/usr/bin/g++-10

          cd ~/pressio_builds
          ls -lh ${HOME}/pressio_builds/pybind11/install
          bdirname=pressio4py-build
          rm -rf ${bdirname} && mkdir ${bdirname} && cd ${bdirname}

          cmake -DCMAKE_VERBOSE_MAKEFILE:BOOL=TRUE \
                -DCMAKE_INSTALL_PREFIX=${HOME}/pressio_builds/pressio4py-install \
                -DCMAKE_CXX_COMPILER=${CXX} \
                -DCMAKE_BUILD_TYPE=Release \
                \
                -DEIGEN_INCLUDE_DIR=${HOME}/pressio_builds/eigen/install/include/eigen3 \
                -DPRESSIO_INCLUDE_DIR=${HOME}/pressio_builds/pressio/install/include \
                -DPYBIND11_DIR=${HOME}/pressio_builds/pybind11/install \
                ${HOME}/pressio_repos/pressio4py
          make 
          make install
      - name: Test pressio4py
        run: |
          cd ${HOME}/pressio_builds/pressio4py-build
          ls -lh
          python --version
          which pytest

      # - name: Install Pressio
      #   run: |
      #     cd ~/pressio_repos
      #     cd pressio-builder

      # - name: Install TPLs 
      #   run: |
      #     cd ${PRESSIO_REPOS}/pressio-builder
      #     bash ./main_tpls.sh -dryrun=no -build-mode=Debug \
      #          -target-dir=${PRESSIO_BUILDS} -tpls=pybind11,eigen

          
#       # Runs a single command using the runners shell
#       - name: Running doxygen
#         run: |
#           pwd
#           cd docs/
#           doxygen Doxyfile
          
#       # Runs a single command using the runners shell
#       - name: Generate html
#         run: |
#           cd ..
#           git clone https://github.com/mosra/m.css.git
#           cd m.css/documentation
#           pwd
#           ls -lh ../../pressio/docs/
#           ./doxygen.py ../../pressio/docs/conf.py
          
#       - name: Commit changes
#         run: |
#           pwd
#           cd docs/
#           touch temp_file.txt
#           git config --local user.email "action@github.com"
#           git config --local user.name "GitHub Action"
#           git add html
#           git add html/*.*
#           git add xml
#           git add xml/*.*
#           git commit -m "Generated html and xml via github action" -a
          
          
#       - name: Push changes
#         uses: ad-m/github-push-action@master
#         with:
#           github_token: ${{ secrets.GITHUB_TOKEN }}
                    
#       # Runs a single command using the runners shell
#       - name: Run a one-line script
#         run: echo Hello, world!

#       # Runs a set of commands using the runners shell
#       - name: Run a multi-line script
#         run: |
#           pwd
#           echo Add other actions to build,
#           echo test, and deploy your project.
